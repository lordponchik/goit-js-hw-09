{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAGnC,IAAII,EAAW,GAkBf,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA1BbV,EAAKC,OAAOgB,iBAAiB,UAAUC,IACrCA,EAAEC,iBAEFZ,EAASG,MAAQU,OAAOpB,EAAKI,QAAQiB,OACrCd,EAASe,KAAOF,OAAOpB,EAAKK,OAAOgB,OACnCd,EAASgB,OAASH,OAAOpB,EAAKM,SAASe,OAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKjB,EAASgB,OAAQC,GAAK,EACzChB,EAAcgB,EAAGjB,EAASG,OACvBe,MAAKC,GAAU5B,EAAA6B,OAAOC,QAAQF,KAC9BG,OAAMC,GAAShC,EAAA6B,OAAOI,QAAQD,KAEjCvB,EAASG,OAASH,EAASe,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector(\"input[name='delay']\"),\n  stepEl: document.querySelector(\"input[name='step']\"),\n  amountEl: document.querySelector(\"input[name='amount']\"),\n};\n\nlet formDate = {};\n\nrefs.formEl.addEventListener('submit', e => {\n  e.preventDefault();\n\n  formDate.delay = Number(refs.delayEl.value);\n  formDate.step = Number(refs.stepEl.value);\n  formDate.amount = Number(refs.amountEl.value);\n\n  for (let i = 1; i <= formDate.amount; i += 1) {\n    createPromise(i, formDate.delay)\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n\n    formDate.delay += formDate.step;\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","delayEl","stepEl","amountEl","$47d4ff9957288465$var$formDate","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","Number","value","step","amount","i","then","result","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.9ab093b3.js.map"}